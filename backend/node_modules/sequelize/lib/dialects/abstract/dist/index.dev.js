"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var AbstractDialect =
/*#__PURE__*/
function () {
  function AbstractDialect() {
    _classCallCheck(this, AbstractDialect);
  }

  _createClass(AbstractDialect, [{
    key: "canBackslashEscape",
    value: function canBackslashEscape() {
      return false;
    }
  }]);

  return AbstractDialect;
}();

AbstractDialect.prototype.supports = {
  "DEFAULT": true,
  "DEFAULT VALUES": false,
  "VALUES ()": false,
  "LIMIT ON UPDATE": false,
  "ON DUPLICATE KEY": true,
  "ORDER NULLS": false,
  "UNION": true,
  "UNION ALL": true,
  "RIGHT JOIN": true,
  returnValues: false,
  autoIncrement: {
    identityInsert: false,
    defaultValue: true,
    update: true
  },
  bulkDefault: false,
  schemas: false,
  transactions: true,
  settingIsolationLevelDuringTransaction: true,
  transactionOptions: {
    type: false
  },
  migrations: true,
  upserts: true,
  inserts: {
    ignoreDuplicates: "",
    updateOnDuplicate: false,
    onConflictDoNothing: "",
    onConflictWhere: false,
    conflictFields: false
  },
  constraints: {
    restrict: true,
    addConstraint: true,
    dropConstraint: true,
    unique: true,
    "default": false,
    check: true,
    foreignKey: true,
    primaryKey: true
  },
  index: {
    collate: true,
    length: false,
    parser: false,
    concurrently: false,
    type: false,
    using: true,
    functionBased: false,
    operator: false
  },
  groupedLimit: true,
  indexViaAlter: false,
  JSON: false,
  deferrableConstraints: false,
  escapeStringConstants: false
};
module.exports = AbstractDialect;
module.exports.AbstractDialect = AbstractDialect;
module.exports["default"] = AbstractDialect;