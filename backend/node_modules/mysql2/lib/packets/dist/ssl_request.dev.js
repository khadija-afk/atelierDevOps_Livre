'use strict';

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var ClientConstants = require('../constants/client');

var Packet = require('../packets/packet');

var SSLRequest =
/*#__PURE__*/
function () {
  function SSLRequest(flags, charset) {
    _classCallCheck(this, SSLRequest);

    this.clientFlags = flags | ClientConstants.SSL;
    this.charset = charset;
  }

  _createClass(SSLRequest, [{
    key: "toPacket",
    value: function toPacket() {
      var length = 36;
      var buffer = Buffer.allocUnsafe(length);
      var packet = new Packet(0, buffer, 0, length);
      buffer.fill(0);
      packet.offset = 4;
      packet.writeInt32(this.clientFlags);
      packet.writeInt32(0); // max packet size. todo: move to config

      packet.writeInt8(this.charset);
      return packet;
    }
  }]);

  return SSLRequest;
}();

module.exports = SSLRequest;