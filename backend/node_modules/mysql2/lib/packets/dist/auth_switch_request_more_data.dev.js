'use strict'; // http://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::AuthSwitchRequest

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Packet = require('../packets/packet');

var AuthSwitchRequestMoreData =
/*#__PURE__*/
function () {
  function AuthSwitchRequestMoreData(data) {
    _classCallCheck(this, AuthSwitchRequestMoreData);

    this.data = data;
  }

  _createClass(AuthSwitchRequestMoreData, [{
    key: "toPacket",
    value: function toPacket() {
      var length = 5 + this.data.length;
      var buffer = Buffer.allocUnsafe(length);
      var packet = new Packet(0, buffer, 0, length);
      packet.offset = 4;
      packet.writeInt8(0x01);
      packet.writeBuffer(this.data);
      return packet;
    }
  }], [{
    key: "fromPacket",
    value: function fromPacket(packet) {
      packet.readInt8(); // marker

      var data = packet.readBuffer();
      return new AuthSwitchRequestMoreData(data);
    }
  }, {
    key: "verifyMarker",
    value: function verifyMarker(packet) {
      return packet.peekByte() === 0x01;
    }
  }]);

  return AuthSwitchRequestMoreData;
}();

module.exports = AuthSwitchRequestMoreData;