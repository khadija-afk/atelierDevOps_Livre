"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isMomentInput = isMomentInput;
exports.isMomentInputObject = isMomentInputObject;

var _isObjectEmpty = _interopRequireDefault(require("./is-object-empty"));

var _hasOwnProp = _interopRequireDefault(require("./has-own-prop"));

var _isObject = _interopRequireDefault(require("./is-object"));

var _isDate = _interopRequireDefault(require("./is-date"));

var _isNumber = _interopRequireDefault(require("./is-number"));

var _isString = _interopRequireDefault(require("./is-string"));

var _constructor = require("../moment/constructor");

var _isArray = _interopRequireDefault(require("./is-array"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

// type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined
function isMomentInput(input) {
  return (0, _constructor.isMoment)(input) || (0, _isDate["default"])(input) || (0, _isString["default"])(input) || (0, _isNumber["default"])(input) || isNumberOrStringArray(input) || isMomentInputObject(input) || input === null || input === undefined;
}

function isMomentInputObject(input) {
  var objectTest = (0, _isObject["default"])(input) && !(0, _isObjectEmpty["default"])(input),
      propertyTest = false,
      properties = ['years', 'year', 'y', 'months', 'month', 'M', 'days', 'day', 'd', 'dates', 'date', 'D', 'hours', 'hour', 'h', 'minutes', 'minute', 'm', 'seconds', 'second', 's', 'milliseconds', 'millisecond', 'ms'],
      i,
      property,
      propertyLen = properties.length;

  for (i = 0; i < propertyLen; i += 1) {
    property = properties[i];
    propertyTest = propertyTest || (0, _hasOwnProp["default"])(input, property);
  }

  return objectTest && propertyTest;
}

function isNumberOrStringArray(input) {
  var arrayTest = (0, _isArray["default"])(input),
      dataTypeTest = false;

  if (arrayTest) {
    dataTypeTest = input.filter(function (item) {
      return !(0, _isNumber["default"])(item) && (0, _isString["default"])(input);
    }).length === 0;
  }

  return arrayTest && dataTypeTest;
}