"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Deferred = void 0;

var TimeoutError_1 = require("./TimeoutError");

var Deferred =
/*#__PURE__*/
function () {
  function Deferred() {
    var _this = this;

    _classCallCheck(this, Deferred);

    this._promise = new Promise(function (resolve, reject) {
      _this._reject = reject;
      _this._resolve = resolve;
    });
  }

  _createClass(Deferred, [{
    key: "registerTimeout",
    value: function registerTimeout(timeoutInMillis, callback) {
      var _this2 = this;

      if (this._timeout) return;
      this._timeout = setTimeout(function () {
        callback();

        _this2.reject(new TimeoutError_1.TimeoutError('Operation timeout'));
      }, timeoutInMillis);
    }
  }, {
    key: "_clearTimeout",
    value: function _clearTimeout() {
      if (!this._timeout) return;
      clearTimeout(this._timeout);
    }
  }, {
    key: "resolve",
    value: function resolve(value) {
      this._clearTimeout();

      this._resolve(value);
    }
  }, {
    key: "reject",
    value: function reject(error) {
      this._clearTimeout();

      this._reject(error);
    }
  }, {
    key: "promise",
    value: function promise() {
      return this._promise;
    }
  }]);

  return Deferred;
}();

exports.Deferred = Deferred;