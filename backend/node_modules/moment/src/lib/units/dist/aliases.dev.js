"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.normalizeUnits = normalizeUnits;
exports.normalizeObjectUnits = normalizeObjectUnits;

var _hasOwnProp = _interopRequireDefault(require("../utils/has-own-prop"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var aliases = {
  D: 'date',
  dates: 'date',
  date: 'date',
  d: 'day',
  days: 'day',
  day: 'day',
  e: 'weekday',
  weekdays: 'weekday',
  weekday: 'weekday',
  E: 'isoWeekday',
  isoweekdays: 'isoWeekday',
  isoweekday: 'isoWeekday',
  DDD: 'dayOfYear',
  dayofyears: 'dayOfYear',
  dayofyear: 'dayOfYear',
  h: 'hour',
  hours: 'hour',
  hour: 'hour',
  ms: 'millisecond',
  milliseconds: 'millisecond',
  millisecond: 'millisecond',
  m: 'minute',
  minutes: 'minute',
  minute: 'minute',
  M: 'month',
  months: 'month',
  month: 'month',
  Q: 'quarter',
  quarters: 'quarter',
  quarter: 'quarter',
  s: 'second',
  seconds: 'second',
  second: 'second',
  gg: 'weekYear',
  weekyears: 'weekYear',
  weekyear: 'weekYear',
  GG: 'isoWeekYear',
  isoweekyears: 'isoWeekYear',
  isoweekyear: 'isoWeekYear',
  w: 'week',
  weeks: 'week',
  week: 'week',
  W: 'isoWeek',
  isoweeks: 'isoWeek',
  isoweek: 'isoWeek',
  y: 'year',
  years: 'year',
  year: 'year'
};

function normalizeUnits(units) {
  return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
}

function normalizeObjectUnits(inputObject) {
  var normalizedInput = {},
      normalizedProp,
      prop;

  for (prop in inputObject) {
    if ((0, _hasOwnProp["default"])(inputObject, prop)) {
      normalizedProp = normalizeUnits(prop);

      if (normalizedProp) {
        normalizedInput[normalizedProp] = inputObject[prop];
      }
    }
  }

  return normalizedInput;
}