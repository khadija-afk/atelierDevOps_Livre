"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.as = as;
exports.valueOf = exports.asYears = exports.asQuarters = exports.asMonths = exports.asWeeks = exports.asDays = exports.asHours = exports.asMinutes = exports.asSeconds = exports.asMilliseconds = void 0;

var _bubble = require("./bubble");

var _aliases = require("../units/aliases");

function as(units) {
  if (!this.isValid()) {
    return NaN;
  }

  var days,
      months,
      milliseconds = this._milliseconds;
  units = (0, _aliases.normalizeUnits)(units);

  if (units === 'month' || units === 'quarter' || units === 'year') {
    days = this._days + milliseconds / 864e5;
    months = this._months + (0, _bubble.daysToMonths)(days);

    switch (units) {
      case 'month':
        return months;

      case 'quarter':
        return months / 3;

      case 'year':
        return months / 12;
    }
  } else {
    // handle milliseconds separately because of floating point math errors (issue #1867)
    days = this._days + Math.round((0, _bubble.monthsToDays)(this._months));

    switch (units) {
      case 'week':
        return days / 7 + milliseconds / 6048e5;

      case 'day':
        return days + milliseconds / 864e5;

      case 'hour':
        return days * 24 + milliseconds / 36e5;

      case 'minute':
        return days * 1440 + milliseconds / 6e4;

      case 'second':
        return days * 86400 + milliseconds / 1000;
      // Math.floor prevents floating point math errors here

      case 'millisecond':
        return Math.floor(days * 864e5) + milliseconds;

      default:
        throw new Error('Unknown unit ' + units);
    }
  }
}

function makeAs(alias) {
  return function () {
    return this.as(alias);
  };
}

var asMilliseconds = makeAs('ms'),
    asSeconds = makeAs('s'),
    asMinutes = makeAs('m'),
    asHours = makeAs('h'),
    asDays = makeAs('d'),
    asWeeks = makeAs('w'),
    asMonths = makeAs('M'),
    asQuarters = makeAs('Q'),
    asYears = makeAs('y'),
    valueOf = asMilliseconds;
exports.valueOf = valueOf;
exports.asYears = asYears;
exports.asQuarters = asQuarters;
exports.asMonths = asMonths;
exports.asWeeks = asWeeks;
exports.asDays = asDays;
exports.asHours = asHours;
exports.asMinutes = asMinutes;
exports.asSeconds = asSeconds;
exports.asMilliseconds = asMilliseconds;